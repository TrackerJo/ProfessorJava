import {styleTags, tags} from "@lezer/highlight"

export const highlighting = styleTags({
  
  "Comment": tags.lineComment,
  "Number": tags.number,
  "String": tags.string,
  "BinaryExpression": tags.comment,
  "ListElement": tags.list,
  "DataType": tags.typeName,
  "OpenParenthesis": tags.paren,
  "ClosedParenthesis": tags.paren,
  "Plus": tags.arithmeticOperator,
   "Minus": tags.arithmeticOperator,
   "Multiply": tags.arithmeticOperator,
   "Divide": tags.arithmeticOperator,
   
   
   "LetKW": tags.keyword,
   "Equal": tags.logicOperator,
   "Condition": tags.operator,
   "IfKW": tags.keyword,
   "OpenBracket": tags.bracket,
   "ClosedBracket": tags.bracket,
  "Mutation": tags.keyword,
  "AddKW": tags.keyword,
  "SubtractKW": tags.keyword,
  "DivideKW": tags.keyword,
  "MultiplyKW": tags.keyword,
  "RemoveKW": tags.keyword,
  "RemoveAllKW": tags.keyword,
  "ElseKW": tags.keyword,
  "RemoveAtKW": tags.keyword,
  "AddMutation": tags.keyword,
  "SubtractMutation": tags.keyword,
  "DivideMutation": tags.keyword,
  "MultiplyMutation": tags.keyword,
  "RemoveMutation": tags.keyword,
  "RemoveAllMutation": tags.keyword,
  "RemoveAtMutation": tags.keyword,
  "ListSubscript": tags.keyword,
  "SubKW": tags.keyword,
  "ForKW": tags.keyword,
  "WhileKW": tags.keyword,
  "ForWhenKW": tags.keyword,
  "ForEachKW": tags.keyword,
  "ForWhen": tags.keyword,
  "ForEach": tags.keyword,
  "FunctionKW": tags.keyword,
  "VarName": tags.variableName,
  "FunctionCall/VarName": tags.name,
  "FunctionDeclaration/VarName": tags.name,

  
})
